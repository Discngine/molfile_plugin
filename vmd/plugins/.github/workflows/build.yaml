name: VMD Build Matrix

# Controls when the action will run. Triggers the workflow on push
on: 
  push:
  pull_request:
  release:
    # tags:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }} # будет запускаться по очереди на всех типах машин
    strategy:
      fail-fast: false
      matrix:
        config: 
          UbuntuLatest:
          {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc.7z",
            build_type: "Release",
            architecture: "LINUXAMD64",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Ninja"
          }
          macOsLatest:
          {
            name: "macOS Latest Clang",
            os: macos-latest,
            artifact: "macos_clang.7z",
            build_type: "Release",
            architecture: "MACOSXX86_64",
            cc: "clang",
            cxx: "clang++",
            archiver: "7za a",
            generators: "Ninja"
          }
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install netcdf tcl
          
      - name: Build
        shell: bash
        working-directory: vmd/plugins
        run: make ${{ matrix.config.architecture }}

      - name: Make Distrib
        shell: bash
        env:
          PLUGINDIR: compiled
        run: |
          echo $PLUGINDIR
          make distrib

      # - name: Pack
      #   shell: bash
      #   working-directory: instdir
      #   run: |
      #     ls -laR
      #     ${{ matrix.config.archiver }} ../${{ matrix.config.artifact }} .
      # - name: Upload
      #   uses: actions/upload-artifact@v1
      #   with:
      #     path: ./${{ matrix.config.artifact }}
      #     name: ${{ matrix.config.artifact }}

      # - name: Upload release asset
      #   if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ./${{ matrix.config.artifact }}
      #     asset_name: ${{ matrix.config.artifact }}.zip
      #     asset_content_type: application/zip