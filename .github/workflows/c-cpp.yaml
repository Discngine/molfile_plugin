name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  ubuntuBuild:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: make
      run: cd vmd/plugins && make LINUXAMD64
    - name: make distrib
      env: 
        PLUGINDIR: compiled
      run: cd vmd/plugins && make distrib
    - name: Pack
      shell: bash
      working-directory: vmd/plugins
      run: |
        ls -laR
        tar -czf ../molfile_plugin_ubuntu_gcc.tar.gz .
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        path: vmd/molfile_plugin_macos_clang.tar.gz
        name: molfile_plugin_macos_clang.tar.gz
    - name: Upload release asset
      if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ../molfile_plugin_ubuntu_gcc.tar.gz
        asset_name: molfile_plugin_ubuntu_gcc.tar.gz
        asset_content_type: application/gzip

  macOsBuild:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      env:
        PLUGINDIR: compiled
    - name: make
      run: cd  vmd/plugins && make MACOSXX86_64
    - name: make distrib
      env: 
        PLUGINDIR: compiled
      run: cd vmd/plugins && make distrib
    - name: Pack
      shell: bash
      working-directory: vmd/plugins
      run: |
        ls -laR
        tar -czf ../molfile_plugin_macos_clang.tar.gz .
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        path: vmd/molfile_plugin_macos_clang.tar.gz
        name: molfile_plugin_macos_clang.tar.gz
    - name: Upload release asset
      if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ../molfile_plugin_macos_clang.tar.gz
        asset_name: molfile_plugin_macos_clang.tar.gz
        asset_content_type: application/gzip
